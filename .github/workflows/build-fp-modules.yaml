name: Build Flatpak Modules
on:
  workflow_call:
    inputs:
      cache-key-prefix:
        description: Prefix of the cache key
        type: string
        required: true
      cache-key-hash:
        description: Hash to append the cache key prefix
        type: string
        required: true
      element:
        description: Element to pre-build
        type: string
        required: true
      modules:
        description: A JSON array of tarball element prefixes
        type: string
        required: true
      arch:
        description: Architecture of the build
        default: x86_64
        type: string
      upload-artifacts:
        description: Upload generated artifacts
        default: false
        type: boolean
      reupload-cache:
        description: Re-upload the cache to avoid automatic eviction
        default: false
        type: boolean
      max-uncompressed-cache-size:
        description: Size of the cache uncompressed
        type: string
        required: true
      strict-cache-key-matching:
        description: Only allow to restore a specific cache or build from scratch if no match
        default: false
        type: boolean
env:
  PROJECT_OPTIONS: target_arch ${{ inputs.arch }}
jobs:
  pre-build:
    name: Pre-build ${{ inputs.element }} (${{ inputs.arch }})
    runs-on: ${{ inputs.arch == 'aarch64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    outputs:
      cache-key: ${{ steps.cache-restore.outputs.cache-primary-key }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare build space
        uses: ./.github/actions/prepare-build-space

      - name: Ensure Podman
        uses: ./.github/actions/ensure-podman

      - name: Setup BuildStream
        id: setup-buildstream
        uses: ./.github/actions/setup-buildstream
        with:
          add-local-cache-server-config: 'both'
          local-cache-server-push: 'both'

      - name: Restore buildbox-casd Cache
        id: cache-restore
        uses: ./.github/actions/cache-restore
        with:
          server-quota-high: ${{ inputs.max-uncompressed-cache-size }}
          key: ${{ inputs.cache-key-prefix }}${{ inputs.cache-key-hash }}
          restore-keys: ${{ inputs.strict-cache-key-matching && null || inputs.cache-key-prefix }}

      - name: Build ${{ inputs.element }}
        id: build
        if: ${{ (github.ref == 'refs/heads/master') && (steps.cache-restore.outputs.cache-hit != 'true') }}
        uses: ./.github/actions/build-bst-element
        with:
          shell: ${{ steps.setup-buildstream.outputs.shell }}
          project-options: ${{ env.PROJECT_OPTIONS }}
          element: ${{ inputs.element }}
          logs-path: ${{ steps.setup-buildstream.outputs.logs-path }}

      - name: Remove uploaded buildbox-casd cache
        id: cache-remove
        if: ${{ (github.ref == 'refs/heads/master') && inputs.reupload-cache && (steps.cache-restore.outputs.cache-hit == 'true') }}
        env:
          GH_TOKEN: ${{ github.token }}
        shell: bash
        run: |
          : Remove existing buildbox-casd cache

          echo ::group::Install GitHub CLI
          gh extension install actions/gh-actions-cache
          echo ::endgroup::

          echo ::group::Remove cache
          gh actions-cache delete ${{ steps.cache-restore.outputs.cache-primary-key }} -R ${{ github.repository }} -B refs/heads/master --confirm
          echo ::endgroup::

      - name: Save buildbox-casd Cache
        if: ${{ steps.build.conclusion == 'success' || steps.cache-remove.conclusion == 'success' }}
        uses: ./.github/actions/cache-save
        with:
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}
          path: ${{ steps.cache-restore.outputs.cache-path }}

      - name: Build Skipped
        if: ${{ steps.build.conclusion == 'skipped' }}
        shell: bash
        run: |
          if [[ "${{ steps.cache-restore.outputs.cache-hit }}" != "true" ]]; then
            echo "::notice::Building was skipped since the build cache will not be saved"
          else
            echo "::notice::Building was skipped since a matching build cache is already available"
          fi

  flatpak-modules:
    runs-on: ${{ inputs.arch == 'aarch64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    needs: pre-build
    strategy:
      matrix:
        modules: ${{ fromJson(inputs.modules) }}
    name: Generate ${{ matrix.modules }} Flatpak Module (${{ inputs.arch }})
    env:
      ELEMENT: flatpak-modules/${{ matrix.modules }}-tarball.bst
      FILENAME: flatpak-${{ matrix.modules }}-${{ inputs.arch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare build space
        uses: ./.github/actions/prepare-build-space

      - name: Ensure Podman
        uses: ./.github/actions/ensure-podman

      - name: Setup BuildStream
        id: setup-buildstream
        uses: ./.github/actions/setup-buildstream
        with:
          add-local-cache-server-config: 'both'

      - name: Restore buildbox-casd Cache
        id: cache-restore
        uses: ./.github/actions/cache-restore
        with:
          server-quota-high: ${{ inputs.max-uncompressed-cache-size }}
          key: ${{ needs.pre-build.outputs.cache-key }}
          restore-keys: |
            ${{ inputs.cache-key-prefix }}

      - name: Build ${{ env.ELEMENT }}
        id: build
        uses: ./.github/actions/build-bst-element
        with:
          shell: ${{ steps.setup-buildstream.outputs.shell }}
          project-options: ${{ env.PROJECT_OPTIONS }}
          element: ${{ env.ELEMENT }}
          logs-path: ${{ steps.setup-buildstream.outputs.logs-path }}

      - name: Prepare ${{ matrix.modules }} Tarball
        if: ${{ inputs.upload-artifacts }}
        uses: ./.github/actions/generate-bst-artifact
        with:
          shell: ${{ steps.setup-buildstream.outputs.shell }}
          element: ${{ env.ELEMENT }}
          filename: ${{ env.FILENAME }}
          options: ${{ steps.build.outputs.options }}

      - name: Upload ${{ matrix.modules }} Tarball
        if: ${{ inputs.upload-artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.FILENAME }}
          path: ${{ env.FILENAME }}.tar.xz
