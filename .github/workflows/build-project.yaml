name: Build Project
on:
  workflow_call:
    inputs:
      arches:
        description: A JSON array of architectures to build on
        default: '["x86_64"]'
        type: string
      upload-artifacts:
        description: Upload generated artifacts
        default: false
        type: boolean
      reupload-cache:
        description: Re-upload the cache to avoid automatic eviction
        default: false
        type: boolean
jobs:
  prepare:
    name: Prepare cache key hash
    runs-on: 'ubuntu-24.04'
    outputs:
      cache-key-hash: ${{ steps.cache-key-hash.outputs.hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate cache key hash
        id: cache-key-hash
        shell: bash
        run: |
          : Generate cache key hash

          echo "hash=${{ hashFiles('project.conf', 'elements/**/*.bst', 'elements/**/*.yml', 'include/*', 'patches/**/*.patch', 'plugins/**/*.py') }}"  >> $GITHUB_OUTPUT

  fp-deps:
    name: Build deps.bst
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        arch: ${{ fromJSON(inputs.arches) }}
    uses: ./.github/workflows/build-fp-modules.yaml
    with:
      cache-key-prefix: flatpak-deps-bst-${{ matrix.arch }}-
      cache-key-hash: ${{ needs.prepare.outputs.cache-key-hash }}
      element: deps.bst
      modules: '["base", "devel", "devtools"]'
      arch: ${{ matrix.arch }}
      upload-artifacts: ${{ inputs.upload-artifacts }}
      reupload-cache: ${{ inputs.reupload-cache }}

  fp-qt:
    name: Build qt.bst
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        arch: ${{ fromJSON(inputs.arches) }}
    uses: ./.github/workflows/build-fp-modules.yaml
    with:
      cache-key-prefix: flatpak-qt-bst-${{ matrix.arch }}-
      cache-key-hash: ${{ needs.prepare.outputs.cache-key-hash }}
      element: qt.bst
      modules: '["qt"]'
      arch: ${{ matrix.arch }}
      upload-artifacts: ${{ inputs.upload-artifacts }}
      reupload-cache: ${{ inputs.reupload-cache }}
