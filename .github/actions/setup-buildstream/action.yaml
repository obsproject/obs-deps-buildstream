name: Setup BuildStream
inputs:
  caches-path:
    description: Path to the cache folder that BuildStream will use to cache artifacts
    required: false
    default:  ${{ github.workspace }}/.bst/caches
  sources-path:
    description: Path to the cache folder that BuildStream will use to cache sources
    required: false
    default:  ${{ github.workspace }}/.bst/sources
  logs-path:
    description: Path to the log folder that BuildStream will use to store logs
    required: false
    default:  ${{ github.workspace }}/.bst/logs
  add-local-cache-server-config:
    description: Add 127.0.0.1:local-cache-server-port as project cache server (none, artifacts, sources, both)
    required: false
    default: 'none'
  local-cache-server-port:
    description: Port of the local cache server
    required: false
    default: 11001
  local-cache-server-push:
    description: Enable pushing to the local cache server (none, artifacts, sources, both)
    required: false
    default: 'none'
  buildstream-project-name:
    description: Name used for cache server setup
    required: false
    default: '${GITHUB_REPOSITORY#*/}'
outputs:
  shell:
    description: Shell with BuildStream env
    value: ${{ steps.install-toolbx.outputs.shell }}
  caches-path:
    description: Path to the cache folder that BuildStream uses to cache artifacts
    value: ${{ inputs.caches-path }}
  sources-path:
    description: Path to the cache folder that BuildStream uses to cache sources
    value: ${{ inputs.sources-path }}
  logs-path:
    description: Path to the log folder that BuildStream uses to store logs
    value: ${{ inputs.logs-path }}
  local-cache-server-port:
    description: Port of the local cache server
    value: ${{ inputs.local-cache-server-port }}
  local-cache-server-url:
    description: Url of the local cache server
    value: http://127.0.0.1:${{ inputs.local-cache-server-port }}
runs:
  using: composite
  steps:
    - name: Check Runner Operating System
      if: runner.os != 'Linux'
      shell: bash
      run: |
        : Check Runner Operating System
        echo "::notice::setup-buildstream action requires a Ubuntu runner."
        exit 2

    - name: Check Runner Architecture
      if: runner.arch != 'x64' && runner.arch != 'ARM64'
      shell: bash
      run: |
        : Check Runner Architecture
        echo "::notice::setup-buildstream action requires a x86_64 or a ARM64 runner."
        exit 2

    - name: Check Action Inputs
      shell: bash
      run: |
        : Check Action Inputs

        echo ::group::Check add-local-cache-server-config
        case "${{ inputs.add-local-cache-server-config }}" in
          none);;
          artifacts);;
          sources);;
          both);;
          *)
            echo "::error::add-local-cache-server-config is incorrect"
            exit 2
            ;;
        esac
        echo ::endgroup::

        echo ::group::Check local-cache-server-push
        case "${{ inputs.local-cache-server-push }}" in
          none);;
          artifacts);;
          sources);;
          both);;
          *)
            echo "::error::local-cache-server-push is incorrect"
            exit 2
            ;;
        esac
        echo ::endgroup::

    - name: Install Toolbx container
      id: install-toolbx
      shell: bash
      run: |
        : Install Toolbx container

        echo ::group::Install Toolbx
        sudo apt-get install podman-toolbox
        echo ::endgroup

        echo ::group::Create container
        SHELL=$(which bash) toolbox -y --log-level=info --log-podman create buildstream --image registry.gitlab.com/freedesktop-sdk/infrastructure/freedesktop-sdk-docker-images/bst2:latest
        echo 'shell=toolbox run -c buildstream bash --noprofile --norc -eo pipefail {0}' >> $GITHUB_OUTPUT
        echo ::endgroup

    - name: Setup BuildStream config file
      shell: bash
      run: |
        : Setup BuildStream config file

        echo ::group::Generate config file
        cat <<EOF > ~/.config/buildstream.conf
        sourcedir: ${{ inputs.sources-path }}
        cachedir: ${{ inputs.caches-path }}
        logdir: ${{ inputs.logs-path }}
        EOF

        {
          if [[ "${{ inputs.add-local-cache-server-config }}" != "none" ]]; then

            echo "projects:"
            echo "  ${{ inputs.buildstream-project-name }}:"

            if [[ "${{ inputs.add-local-cache-server-config }}" == "artifacts" ]] || [[ "${{ inputs.add-local-cache-server-config }}" == "both" ]]; then
              echo "    artifacts:"
              echo "      servers:"
              echo "      - url: http://127.0.0.1:${{ inputs.local-cache-server-port }}"
              echo "        push: ${{ (inputs.local-cache-server-push == 'artifacts') || (inputs.local-cache-server-push == 'both') }}"
            fi

            if [[ "${{ inputs.add-local-cache-server-config }}" == "sources" ]] || [[ "${{ inputs.add-local-cache-server-config }}" == "both" ]]; then
              echo "    source-caches:"
              echo "      servers:"
              echo "      - url: http://127.0.0.1:${{ inputs.local-cache-server-port }}"
              echo "        push: ${{ (inputs.local-cache-server-push == 'sources') || (inputs.local-cache-server-push == 'both') }}"
            fi
          fi
        } >> ~/.config/buildstream.conf
        echo ::endgroup::

        echo ::group::Print generated config file
        cat ~/.config/buildstream.conf
        echo ::endgroup::
